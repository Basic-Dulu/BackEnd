{
    "swagger": "2.0",
    "info": {
        "title": "User API",
        "version": "1.0.0"
    },
    "basePath": "/users",
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Enter your Bearer token in the format: Bearer {the_token}"
        }
    },
    "paths": {
        "/": {
            "get": {
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "A list of users"
                    }
                }
            },
            "post": {
                "summary": "Create a new user",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "email",
                                "username",
                                "password",
                                "gender"
                            ],
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "gender": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Missing or invalid fields"
                    },
                    "409": {
                        "description": "Email or username already exists"
                    }
                }
            }
        },
        "/{user_id}": {
            "get": {
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "The ID of the user to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "summary": "Login user",
                "description": "Logs a user in and returns a JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "email",
                                "password"
                            ],
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful, returns a JWT token"
                    },
                    "400": {
                        "description": "Email and password are required"
                    },
                    "401": {
                        "description": "Invalid email or password"
                    }
                }
            }
        }
    }
}

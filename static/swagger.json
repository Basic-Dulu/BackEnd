{
    "swagger": "2.0",
    "info": {
        "title": "User API",
        "version": "1.0.0"
    },
    "basePath": "/users",
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Enter your Bearer token in the format: Bearer {your_token}"
        }
    },
    "paths": {
        "/": {
            "get": {
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "A list of users"
                    }
                }
            },
            "post": {
                "summary": "Create a new user",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": ["email", "username", "password", "gender"],
                            "properties": {
                                "email": { "type": "string" },
                                "username": { "type": "string" },
                                "password": { "type": "string" },
                                "gender": { "type": "string" }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Missing or invalid fields"
                    },
                    "409": {
                        "description": "Email or username already exists"
                    }
                }
            }
        },
        "/{user_id}": {
            "get": {
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "The ID of the user to retrieve"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "summary": "Login user",
                "description": "Logs a user in and returns a JWT token.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": ["email", "password"],
                            "properties": {
                                "email": { "type": "string" },
                                "password": { "type": "string" }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful, returns a JWT token"
                    },
                    "400": {
                        "description": "Email and password are required"
                    },
                    "401": {
                        "description": "Invalid email or password"
                    }
                }
            }
        },
        "/upload-image": {
            "post": {
                "summary": "Upload an image",
                "consumes": ["multipart/form-data"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "image",
                        "type": "file",
                        "required": true,
                        "description": "Image file to upload"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Upload successful",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": { "type": "boolean" },
                                "message": { "type": "string" },
                                "url": { "type": "string" }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        }
    }
}
